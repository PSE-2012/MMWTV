//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace PF_Greyscale
{
    using AForge;
    using Oqat;
    using Oqat.PublicRessources.Model;
    using Oqat.PublicRessources.Plugin;
    using System.Drawing;
   
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.ComponentModel.Composition;
    using System.Windows.Controls;


    [ExportMetadata("namePlugin", "PF_Greyscale")]
    [ExportMetadata("type", PluginType.IFilterOqat)]
    [Export(typeof(IPlugin))]
    [Serializable()]
    public class Greyscale : IFilterOqat
    {


        private string _namePlugin = "PF_Greyscale";
        private PluginType _type = PluginType.IFilterOqat;
        VM_Greyscale propertiesView;

        /// <summary>
        /// constructor
        /// </summary>

        public Greyscale()
        {
            propertiesView= new VM_Greyscale();
            propertiesView.local(_namePlugin + "_default.xml");
        
        }
        /// <summary>
        /// Generates the filtered Image.
        /// </summary>
        public Bitmap process(Bitmap frame)
        {
            AForge.Imaging.Filters.Grayscale filter = new AForge.Imaging.Filters.Grayscale(propertiesView.getRed(),propertiesView.getGreen(),propertiesView.getBlue());
            Bitmap grayImage = filter.Apply(frame);
            return grayImage;
        }

        public string namePlugin
        {
            get
            {
                return this._namePlugin;

            }
            set
            {
                this._namePlugin = value;
            }
        }

        public PluginType type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }

        public UserControl propertyView
        {
            get
            {
                return this.propertiesView;
            }
        }

        public Dictionary<EventType, List<Delegate>> getEventHandlers()
        {
            Dictionary<EventType, List<Delegate>> handlers = new Dictionary<EventType, List<Delegate>>();
            return handlers;
        }

        /// <summary>
        /// Returns a Memento with the current state of the Object.
        /// </summary>

        public Oqat.PublicRessources.Model.Memento getMemento()
        {
            double[] colorValues = new double[3];
            colorValues[0] = this.propertiesView.getRed();
            colorValues[1] = this.propertiesView.getGreen();
            colorValues[2] = this.propertiesView.getBlue();

            Memento mem = new Memento(this.namePlugin + "_properties", colorValues);

            return mem;
        }

        /// <summary>
        /// Sets a Memento as the current state of the Object.
        /// </summary>

        public void setMemento(Oqat.PublicRessources.Model.Memento memento)
        {
            Object obj = memento.state;

            var otto = (double[])obj;
            this.propertiesView.changeValue(otto[0], otto[1], otto[2]);
        }
        public void local(String s)
        {
            propertiesView.local(_namePlugin + s);
        }
       
    }
}

