//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace PF_NoiseGenerator
{
    using AForge;
    using Oqat;
    using Oqat.PublicRessources.Model;
    using Oqat.PublicRessources.Plugin;
    using System.Drawing;
 
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.ComponentModel.Composition;
    using AForge.Imaging.Filters;
    using AForge.Math.Random;

    using System.Windows.Controls;



    [ExportMetadata("namePlugin", "PF_NoiseGenerator")]
    [ExportMetadata("type", PluginType.IFilterOqat)]
    [Export(typeof(IPlugin))]
    [Serializable()]
    public class NoiseGenerator : IFilterOqat
    {


        private string _namePlugin = "PF_NoiseGenerator";
        private PluginType _type = PluginType.IFilterOqat;
        VM_NoiseGenerator propertiesView;


        public NoiseGenerator()
        {
            propertiesView = new VM_NoiseGenerator();
        
        }

        public Bitmap process(Bitmap frame)
        {
            IRandomNumberGenerator generator = new UniformGenerator(new Range(-1*propertiesView.getUp(), propertiesView.getUp()));
           
            AdditiveNoise filter = new AdditiveNoise(generator);
          
            filter.ApplyInPlace(frame);
            return frame;
        }

        public string namePlugin
        {
            get
            {
                return this._namePlugin;

            }
            set
            {
                this._namePlugin = value;
            }
        }

        public PluginType type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }

        public UserControl propertyView
        {
            get
            {
                return propertiesView;
            }
        }

        public Dictionary<EventType, List<Delegate>> getEventHandlers()
        {
            Dictionary<EventType, List<Delegate>> handlers = new Dictionary<EventType, List<Delegate>>();
            return handlers;
        }

        public Oqat.PublicRessources.Model.Memento getMemento()
        {
            Memento mem = new Memento(this.namePlugin, null);

            return mem;
        }

        public void setMemento(Oqat.PublicRessources.Model.Memento memento)
        {
            //TODO: fix setMmento
            //Object obj = memento.state;
            //NoiseGenerator otto = (NoiseGenerator)obj;
            //this.propertiesView.changeValue(otto.propertiesView.getUp());
          
        }

       
    }
}

